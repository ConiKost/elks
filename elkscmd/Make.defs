# ***** IMPORTANT NOTE *****
#
# This file has been revised to remove the requirement that the elkscmd
# and elks trees are located under /usr/src on the developer's system.
# This requires that the variable BASEDIR be defined in every Makefile
# that includes this header file, prior to including it, and the value
# given to BASEDIR is required to be the relative path from the directory
# containing that Makefile to the directory containing this file.
#
# In addition, if there are any local definitions that need including in
# the CFLAGS value, those should be assigned to LOCALFLAGS before including
# this file.
#
# So as to ensure this, it is recommended that the following three lines
# be used as the first three lines of each Makefile including this file:
#
#	BASEDIR = ...
#
#	LOCALFLAGS = ...
#
#	include $(BASEDIR)/Make.defs
#
# This ensures that the correct value is assigned by using it to include
# this file.
#
##############################################################################

ifndef TOPDIR
$(error TOPDIR is not defined)
endif

include $(TOPDIR)/Make.defs

##############################################################################
#
# Specify platform to compile for. The following platforms are defined:
#
#	i86-ELKS	ELKS on an ix86 processor.
#
#	DEFAULT 	Anything not otherwise defined above.
#
# Select the relevant option here.

PLATFORM=i86-ELKS

##############################################################################
#
# It is not normally necessary to make changes below this line.
#
# Specify directories.

ELKS_DIR=$(TOPDIR)/elks
ELKSCMD_DIR=$(TOPDIR)/elkscmd

INCLUDES=-I$(TOPDIR)/include -I$(ELKS_DIR)/include

##############################################################################
#
# Determine the ELKS kernel version.

E_V=$(shell if [ -f $(ELKS_DIR)/Makefile-rules ]; then \
		grep -v '^\#' $(ELKS_DIR)/Makefile-rules \
		    | fgrep = | head -4 | tr '\#' = | cut -d = -f 2 ;\
	    else echo Version not known ; fi)

ELKS_VSN=$(shell printf '%s.%s.%s-pre%s' $(E_V) | sed 's/-pre$$//')

##############################################################################
#
# Determine compiler variables for this target.

ifeq ($(PLATFORM),i86-ELKS)
	CC=bcc
	CFLBASE=-0 -O -ansi
	LDFLAGS=-s -ansi -L$(TOPDIR)/cross/build/dev86/libc
	CHECK=gcc -c -o .null.o -Wall -pedantic
endif

ifeq ($(PLATFORM),DEFAULT)
	CC=cc
	CFLBASE=
	LDFLAGS=
	CHECK=cc -c -o .null.o
endif

CFLAGS=$(CFLBASE) $(LOCALFLAGS) $(INCLUDES) -D__ELKS__ -DELKS_VERSION=\"$(ELKS_VSN)\"

LD=ld86

##############################################################################
#
# Standard compilation rules.

.c.s:
	$(CC) $(CFLAGS) -S -o $*.o $<

.s.o:
	$(AS) $(ASFLAGS) -o $*.o $<

.S.s:
	gcc -E -traditional $(INCLUDES) $(CCDEFS) -o $*.s $<

.c.o:
	$(CC) $(CFLAGS) -c -o $*.o $<

#
# Image file options
#

IMGDIR=$(TOPDIR)/image

ifdef CONFIG_IMG_FD360
TARGET_FILE=$(IMGDIR)/fd360
TARGET_BLKS=360
endif

ifdef CONFIG_IMG_FD720
TARGET_FILE=$(IMGDIR)/fd720
TARGET_BLKS=720
endif

ifdef CONFIG_IMG_FD1200
TARGET_FILE=$(IMGDIR)/fd1200
TARGET_BLKS=1200
endif

ifdef CONFIG_IMG_FD1440
TARGET_FILE=$(IMGDIR)/fd1440
TARGET_BLKS=1440
endif

ifdef CONFIG_IMG_FD1680
TARGET_FILE=$(IMGDIR)/fd1680
TARGET_BLKS=1680
endif

# FIXME: should use SIBODEV instead of MAKEDEV
ifdef CONFIG_IMG_SIBO
TARGET_FILE=$(IMGDIR)/sibo
TARGET_BLKS=128
endif

ifdef CONFIG_IMG_HD
TARGET_FILE=$(IMGDIR)/hd
TARGET_BLKS=$(CONFIG_IMG_BLOCKS)
endif

#
# Image filesystem options
#

ifdef CONFIG_IMG_MINIX
MKFS=mkfs.minix
MKFS_OPTS=-1 -n14 -i360
endif

MINIX_BOOT=$(ELKSCMD_DIR)/bootblocks

ifdef CONFIG_IMG_FAT
MKFS=mkfs.vfat
MKFS_OPTS=-v
endif

TARGET_MNT=$(TOPDIR)/target
